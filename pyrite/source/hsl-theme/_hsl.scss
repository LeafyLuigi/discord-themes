// what goes in here?
// - Horizontal Server List support.

@use "start" as *;
/*! #{$theme-name} v#{$version} - HSL Addon by LeafyLuigi. Original by Gibbu. */

@use "classes" as *;

/* Begin HSL Addon */
:root {
	/* DO NOT CHANGE THIS VALUE. */
	--horizontal-server-list-enabled: 1;
}

#{c(serverList servers)} {
	z-index: 1010;
}
#{c(serverList tree)} {
	background-color: var(--header-shading);
}

// allow interacting for these
#{c(serverList serverWrapper)},
#{c(serverList folder)} {
	-webkit-app-region: no-drag;
}

// Windows
html:is([lang="fr"],[lang="en-GB"]) {
#{c(os win platform)} {
	#{c(os win type)} {
		height: 0;
		margin-top: 0;
	}
	#{c(serverList servers)} {
		top: calc(var(--server-container) - 48px);
		&::before {
			content: none;
		}
	}
	#{c(header toolbar)} {
		position: static;
		right: 0;
	}
	#{c(header nicknames)} {
		padding-right: 0;
	}
	#{c(os win button)} {
		position: relative;
		height: 22px;
		top: 0;
	}
}

// Mac
#{c(os mac platform)} {
	#{c(os mac type)} #{c(os mac buttons)} {
		padding: 10px;
		margin-top: -22px;
		&::before,
		&::after {
			position: unset;
			top: 0;
		}
	}
	#{c(serverList servers)} {
		top: calc(var(--server-container) - 48px) !important; // !important reason: import uses important
		#{c(serverList scroller)} {
			padding-top: 70px !important; // !important reason: import uses important
		}
	}
	#{c(os mac type)} {
		height: 0;
		&:before {
			content: "";
			height: 22px;
			width: 100vw;
			display: block;
			-webkit-app-region: drag;
		}
	}
	#{c(main appMount)} #{c(os mac type)} #{c(os mac buttons)} {
		height: 12px;
	}
	#{c(serverList servers)} {
		top: var(--server-container) !important; // !important reason: import overrides it
		&::before {
			content: none;
		}
		#{c(serverList scroller)} {
			padding-top: 70px !important; // !important reason: import uses important
		}
	}
	#{c(main appLayer)}#user-settings {
		top: 20px;
		padding-top: 22px;
	}
	:is(#{c(header header)},#{c(sidebar sidebar)}:after) {
		-webkit-app-region: unset;
	}
	#{c(main base)} {
		top: var(--server-container);
	}
}
}
// Linux/Web
:is(#{c(os linux)},#{c(os web)}) {
	#{c(serverList servers)} {
		&::before {
			display: none; // reason: main overrides it
		}
		> #{c(serverList tree)} {
			top: unset;
			position: static;
			height: 100vw;
		}
	}
	#{c(serverList homeContainer)} {
		&+#{c(serverList listItem)} {
			&::before {
				content: none;
			}
		}
	}
}
