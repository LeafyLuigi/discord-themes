@use "backend" as *;
// dist.scss
:root {
	--HSL-server-icon-size: 40px; /* Size of the server icons | DEFAULT: 40px */
	--HSL-server-spacing: 10px; /* Spacing between each server icon | DEFAULT: 10px */
	--HSL-server-direction: column; /* Direction of the server list. | OPTIONS: column, column-reverse | DEFAULT: column */
	--HSL-server-alignment: flex-start; /* Alignment of the server list. | OPTIONS: flex-start, center, flex-end | DEFAULT: flex-start */
}
// end of dist.scss

// base.scss
:root {
	--server-size: var(--HSL-server-icon-size, var(--HSL-size, 35px));
	--server-spacing: var(--HSL-server-spacing, var(--HSL-spacing, 10px));
	--server-padding: 20px;
	--server-container: calc(var(--server-size) + var(--server-padding));
	--server-direction: var(--HSL-server-direction, column);
	--server-alignment: var(--HSL-server-alignment, flex-start);
}

// resizable
#{c(serverList folderParentWrapper)},
#{c(serverList listItem)},
#{c(serverList servers)} {
	width: var(--server-container);
}
#{c(serverList serverWrapperSVG)},
#{c(serverList serverWrapper)},
// .guildsError-b7zR5H, // CANNOT FIND CLASS. VERY LIKELY SERVER IS DOWN THING
#{c(serverList placeholderMask)} {
	width: var(--server-size);
	height: var(--server-size);
}
#{c(serverList expandedFolderBackground)} {
	width: var(--server-size);
	left: 50%;
	translate: -50% 0;
}
// end of resizable

// continuing with base.scss
#{c(main appContainer)} #{c(main base)} {
	top: var(--server-container);
	bottom: 0;
	position: absolute;
	left: 0;
	right: 0;
	max-width: 100%;
}

:is(#{c(serverList unreadMentionsBarTop)},#{c(serverList unreadMentionsBarBottom)}) {
	width: var(--server-size);
	padding: 0;
	left: 50%;
	transform: translateX(-50%);
	height: auto;
}

#{c(serverList servers)} {
	transform-origin: 0 0;
	transform: rotate(-90deg);
	height: 100vw;
	top: var(--server-container);
	position: absolute;
	left: 0;
	& > #{c(serverList tree)} {
		margin-bottom: 0;
	}
	&#{c(serverList hidden)} + #{c(main base)} {
		top: 0;
	}
}

#{c(serverList scroller)} {
	padding: var(--server-spacing) 0 !important; // !important reason: inline style
	display: flex;
	flex-direction: var(--server-direction);
	gap: var(--server-spacing);
	align-items: var(--server-alignment);
	justify-content: var(--server-alignment);
	& > div[aria-label] { // as much as i hate to say it... this is the element <div aria-label="Servers">. Contains all the servers.
		display: flex;
		flex-direction: var(--server-direction);
		gap: var(--server-spacing);
	}
}

#{c(serverList pillWrapper)} {
	transform: rotate(90deg) translateY(-50%);
	height: var(--server-size);
	width: 4px;
	top: calc(var(--server-size) / -1 + var(--server-size) / 2 - 8px);
	margin-left: -2px;
}

#{c(serverList pillItem)} {
	width: 4px;
	transform: scale(0, 1) !important; // !important reason: Yes. It's required.
	transition: 0.15s ease;
	margin-left: 0;
	// Ranges are: unhovering, hovering, selected
	$ranges: (scale(1,0.24) 0 8) (scale(1,0.7) 9 20) (scale(1,1) 21 40);
	@each $range in $ranges {
		$isList: ":is(";
		@for $i from nth($range,2) through nth($range,3) {
			$isList: $isList+"[style*='height: #{$i}'],";
		}
		$isList: str-slice($isList,1,-2)+")"; // remove trailing comma, add closing bracket
		
		&#{$isList} {
			transform: nth($range,1) !important;
		}
	}
}

#{c(serverList folderParentWrapper)} {
	display: flex;
	flex-direction: var(--server-direction);
	gap: var(--server-spacing);
	ul[role='group'] { // folder items
		display: flex;
		flex-direction: var(--server-direction);
		gap: var(--server-spacing);
	}
}

#{c(serverList listItem)} {
	width: var(--server-size);
	transform: rotate(90deg);
	margin: 0 10px;
}

#{c(serverList serverSeparator)} {
	transform: rotate(90deg);
	width: var(--server-size);
}

#{c(serverList expandedFolderBackground)} {
	border-radius: 10px;
	~ ul {
		height: auto !important; // !important reason: required to not have large overhang 
	}
}

// Dragging server indicator
#{c(serverList dragWrapper)} {
	top: 0;
	bottom: 0;
	&::before {
		top: 0;
		height: var(--server-size);
		width: 4px;
		left: -6px;
	}
}

:is(#{c(serverList listItemTooltip)},#{c(serverList listItemTooltipFolder)}) {
	position: absolute;
	max-width: unset;
	white-space: nowrap;
	margin-left: calc(var(--server-size) / -1 - 20px);
	top: calc((var(--server-size) - 10px));
}

#{c(os mac platform)} {
	#{c(os mac type)} {
		width: 100%;
	}
	#{c(main base)} {
		top: calc(var(--server-container) + 30px);
	}
}

// body.foldercontentopened #{c(main base)} { // what is that class
// 	transition: 0.2s ease !important;
// }

// User area being offset
#{c(profile status accountProfilePopoutWrapper)} {
	left: 0;
}
// end of base.scss
