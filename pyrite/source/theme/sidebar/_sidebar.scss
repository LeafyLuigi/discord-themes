@use "backend" as *;
/* Start Sidebar */
// backgrounds.. ugh.
:is(#{c(main dark)}, #{c(main light)})
:is(
	#{c(sidebar server container)},
	#{c(sidebar panel container)},
	#{c(sidebar panel voice container)},
	#{c(sidebar panel activity activityPanel)}
) {
	background: transparent;
}

// Base
#{c(sidebar sidebar)} {
	// for hide channel list
	overflow-x: hidden;
	// notice stuff
	top: calc($nc * -36px);
	position: relative;
	// math is hard.
	height: calc(100vh
		- (var(--horizontal-server-list-enabled, 0) * var(--server-container, 0px))
		- var(--channel-tabs-enabled,0) * (
			(var(--channel-tabs-tabBar-enabled,1) * var(--channel-tabs-favBar-enabled,1) * 5px)
			+ (var(--channel-tabs-tabBar-enabled,1) *
				(var(--channelTabs-tabHeight,32px) + 3px)
			)
			+ (var(--channel-tabs-favBar-enabled,1) *
				(var(--channelTabs-favHeight,28px) + 3px)
			)
		)
		- (var(--windows-titlebar-enabled,0) * 18px)
	);
	// end notice stuff
	background-color: transparent;
	@include bg($bg:$side,$top:48px,$w:240px);
	@include bg2($bg:$header,$h:48px,$w:240px,$z:1001);
	
	#{c(serverList servers)}#{c(serverList hidden)} + & {
		height: 100vh;
	}
}
#{c(os mac platform)} {
	#{c(sidebar sidebar)}::after {
		-webkit-app-region: drag;
	}
}
// Area - Friends List
#{c(sidebar private channels)} {
	background: transparent;
	#{c(sidebar private searchBar)} {
		z-index: 1010;
		box-shadow: none;
	}
	#{c(sidebar private scroller)} {
		margin-top: calc(36px * $nc);
		background: transparent;
		width: 240px;
		#{c(sidebar private link)}:is([href="/store"],[href="/library"],[href="/shop"]),
		#{c(sidebar private channelBadgeIcon)} {
			display: none;
		}
		#{c(sidebar private channel)} {
			padding: 0;
		}
		#{c(sidebar private link)} {
			padding: 1px 0;
		}
	}
	#{c(sidebar private inviteButtonIcon)} {
		color: var(--interactive-normal);
		order: -1;
		&:hover {
			color: var(--interactive-hover);
			filter: drop-shadow(0 0 2px var(--interactive-normal));
		}
	}
}
#{c(sidebar private searchBar)} {
	#{c(sidebar private searchBarComponent)} {
		-webkit-app-region: no-drag;
		background: $card;
	}
}
#{c(sidebar private loadingEmpty)} {
	fill: $primary;
}

#{c(sidebar private headerText)} {
	color: var(--category-color);
	display: flex;
	justify-content: center;
	align-items: center;
	text-align: center;
	&::before {
		content: "";
		height: 2px;
		flex-grow: 1;
		margin-right: 5px;
		background: linear-gradient(to left, currentColor -50%, transparent 50%);
	}
}
// Area - Channels
#{c(sidebar server container)} {
	#{c(scroller content)} {
		>div[style="height: 84px;"]{
			height: 132px !important; // !important reason: element.style
		}
	}
	#{c(sidebar server header container)} {
		box-shadow: none;
		#{c(sidebar server name)} {
			@include header;
			display: flex;
			justify-content: center;
		}
		#{c(sidebar server header header)} {
			z-index: 1010;
			box-shadow: none;
		}
	}
	#{c(sidebar server header bannerContainer)} {
		background-color: transparent;
		top: calc(48px + (36px * $nc));
		z-index: 2;
		&[style*="(-90px)"] {
			z-index: -3000;
		}
		#{c(sidebar server header bannerImage)} {
			&:before {
				content: none;
			}
		}
	}
	#{c(sidebar server scroller)} {
		margin-top: calc(36px * $nc);
		background-color: transparent;
		width: 240px;
	}
}
#{c(sidebar server channel modeUnreadImportant)} #{c(sidebar server channel unreadBlob)} {
	background-color: $primary;
}
#{c(sidebar server header bannerVisible)} #{c(sidebar server header header)} {
	filter: none;
}
#{c(sidebar server channel voice avatarSpeaking)},
#{c(avatar speaking)} {
	box-shadow: inset 0 0 0 2px $primary;
}

#{c(sidebar loadingCategory)},
#{c(sidebar loadingChannelIcon)},
#{c(sidebar loadingChannelName)} {
	background-color: $primary;
}

#{c(sidebar server unreadBar old unreadParent)} {
	width: 224px;
}

// Panels
#{c(sidebar panel panels)} {
	background: transparent;
	width: 240px;
	#{c(sidebar panel username)} {
		@include header;
	}
	:is(
	// #{c(sidebar panel container)} #{c(sidebar panelButtonRow)},
	// #{c(sidebar panel voice container)} #{c(sidebar panel voice inner)} ~ #{c(sidebar panelButtonRow)},
	#{c(sidebar panel activity activityPanel)} #{c(sidebar panel activityActions)}) {
		border: 1px solid $middle;
		border-radius: 8px;
	}
}
#{c(sidebar panel buttons buttons)} {
	background: transparent;
	border: 1px solid $middle;
	box-sizing: content-box;
	border-radius: 8px;
}
#{c(sidebar panel buttons button)} {
	&:first-of-type::before {
		border-bottom-left-radius: 8px;
		border-top-left-radius: 8px;
	}
	&:last-of-type::before {
		border-top-right-radius: 8px;
		border-bottom-right-radius: 8px;
	}
	&:hover {
		background-color: transparent;
	}
	@include bg($bg:$primary,$o:.6);
	&:hover::before {
		background-color: $hover;
	}
}

#{c(sidebar server category children)} {
	order: 1;
}
#{c(sidebar server category mainContent)} {
	order: 2;
}

#{c(sidebar server category wrapper)} #{c(sidebar server category name)} {
	display: flex;
	justify-content: center;
	align-items: center;
	&::before {
		content: "";
		height: 2px;
		flex-grow: 1;
		background: transparent;
		margin-right: 5px;
	}
}

#{c(sidebar server channel voiceLimitWrapper)} {
	background-color: $card;
}
#{c(sidebar server channel voiceLimitUsers)} {
	background-color: transparent;
}
#{c(sidebar server channel voiceLimitTotal)} {
	background-color: transparent;
	&::after {
		content: "/";
		width: auto;
		height: auto;
		border: none;
		left: -6px;
	}
}

#{c(sidebar server channel name)},
#{c(sidebar server channel icon)},
#{c(sidebar server category icon)},
#{c(sidebar server category name)} {
	color: inherit !important; // !important reason: i am very lazy. https://cdn.discordapp.com/attachments/747040126294687764/965181579259428924/unknown.png
}
#{c(sidebar server channel wrapper)} a {
	color: inherit;
}

#{c(sidebar private interactiveBG)},
#{c(sidebar server channel wrapper)} {
	color: var(--read-channel-color);
}

#{c(sidebar private interactive)} {
	&:hover,&:focus-within {
		background: var(--background-modifier-hover);
	}
	&:active {
		background: var(--background-modifier-active);
	}
}

#{c(sidebar private selectedBG)} {
	background: var(--background-modifier-selected);
}

#{c(sidebar server channel modeSelected)},
#{c(sidebar private interactiveSelected)},
#{c(sidebar server channel wrapper)}:hover:not(#{c(sidebar server channel modeMuted)},#{c(sidebar server channel modeLocked)}),
#{c(sidebar private interactiveBG)}:hover:not(#{c(sidebar private mutedBG)}) {
	color: var(--selected-channel-color);
}

#{c(sidebar server channel modeUnreadImportant)} {
	color: var(--unread-channel-color);
	#{c(sidebar server channel unreadBlob)} {
		display: var(--show-channel-unread-dot, block);
		background-color: currentColor;
	}
	#{c(sidebar server channel unreadBlob)},
	#{c(sidebar server channel name)},
	#{c(sidebar server channel icon)} {
		filter: var(--unread-channel-glow, drop-shadow(0 0 2px));
	}
}

#{c(sidebar server channel modeMuted)} {
	color: var(--muted-channel-color);
}
#{c(sidebar server channel modeConnected)} {
	color: var(--category-color);
}
#{c(sidebar server channel modeLocked)} {
	color: var(--locked-voice-channel-color);
}

#{c(sidebar server category wrapper)},
#{c(sidebar server category wrapper)}:hover {
	color: var(--category-color);
	&#{c(sidebar server category collapsed)} {
		color: var(--read-channel-color);
	}
	&#{c(sidebar server category muted)} {
		color: var(--muted-channel-color);
	}
	&:not(#{c(sidebar server category collapsed)}) {
		#{c(sidebar server category name)}::before {
			background: linear-gradient(to left, currentColor -50%, transparent 50%);
		}
	}
}

// Hide Sidebar
#{c(sidebar sidebar)} {
	width: calc(240px - (168px * var(--hide-channel-list, 0)));
	transition: var(--hide-speed, 0.5s) width ease-out;
	&:hover,&:focus-within {
		width: 240px;
		&::before,
		&::after {
			width: 240px;
		}
	}
	&::before,
	&::after {
		transition: var(--hide-speed, 0.5s) width ease-out;
		width: calc(240px - (168px * var(--hide-channel-list, 0)));
	}
}

// // notices (ie "how to use quickswitch", "boost this server" etc) and event notices
// #{c(sidebar notice container)} {
// 	width: 240px;
// }

// #{c(sidebar quests wrapper)} {
// 	display: none;
// }