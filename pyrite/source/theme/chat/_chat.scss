@use "backend" as *;
/* Begin Chat */
#{c(chat chat)},
#{c(chat chatLoadingWrapper)},
#{c(chat messageLoadingWrapper)},
#{c(chat chatContent)} {
	background: transparent;
}
#{c(chat chatContent)} {
	&::before {
		content: none;
	}
	#{c(forums loadingContainer)} {
		background-color: $middle;
	}
}
#{c(chat chatContentInner)},
#{c(chat chatScrollerNSFW)},
#{c(chat noChat)}#{c(chat chatContent)} {
	background: $middle;
}

#{c(chat noChannel)} {
	@include bg($h:48px,$bg:$header);
	@include bg2($bg:$middle,$h:calc(100vh - 48px),$top:48px);
}

#{c(chat mentioned)},
#{c(chat ephemeral)} {
	@include bg($bg:var(--mention-background),$o:var(--mention-opacity),$w:-webkit-fill-available,$tr:all ease-out);
}
#{c(chat mentioned)},
#{c(chat ephemeral)} {
	&:hover:before {
		opacity: calc( var(--mention-opacity) + 0.2 );
	}
}
#{c(chat ephemeralMessage)} {
	color: var(--text-normal);
}

#{c(chat buttonWrapper)} {
	background: transparent;
	border: 1px solid $middle;
	border-radius: 8px;
	#{c(chat button)} {
		@include bg($bg:$primary,$o:0.6);
		&:first-of-type::before {
			border-bottom-left-radius: 8px;
			border-top-left-radius: 8px;
		}
		&:last-of-type::before {
			border-top-right-radius: 8px;
			border-bottom-right-radius: 8px;
		}
		&:hover {
			background-color: transparent;
		}
		&:hover::before {
			background-color: $hover;
		}
	}
}

#{c(chat dividerHasContent)} {
	border-top-color: transparent;
	&#{c(chat dividerUnread)} {
		#{c(chat dividerContent)} {
			font-weight: bold;
		}
		#{c(chat unreadPill)} {
			top: unset;
		}
	}
}

#{c(chat dividerContent)} {
	text-align: center;
	background: $card;
	color: $primary;
	font-weight: normal;
	margin: 0 8px;
	padding: 2px 10px;
	flex: 1 1 auto;
}

#{c(chat newMessagesBar)} {
	background-color: $primary;
	box-shadow: none;
	opacity: 0.75;
	&:hover {
		opacity: 0.9;
	}
	&:active {
		padding-top: 0;
		opacity: 1;
	}
}

#{c(chat repliedMessage)} {
	&::before {
		border-color: $primary;
		filter: drop-shadow(2px 2px 2px $secondary);
	}
	#{c(chat replyBadge)} {
		background-color: $card;
	}
	// allows for spoiler hover
	#{c(chat repliedTextPreview)} #{c(chat repliedTextContent)} {
		pointer-events: unset;
		// disallow click links
		a, span {
			pointer-events: none;
		}
	}
}

#{c(chat chatHeader)} {
	#{c(chat emptyChannelIcon)} {
		background-color: var(--card-background);
	}
	#{c(chat chatHeaderButton)},
	#{c(chat chatHeaderButton)}:hover {
		color: $primary;
	}
}
#{c(chat allowedRole)} {
	background-color: var(--card-background);
}


#{c(chat messageContent)} {
	#{c(chat chatTimestamp)} {
		time {
			font-size: 0;
			&:before {
				content: "(" attr(aria-label) ")";
				text-transform: lowercase;
				font-size: 0.625rem;
			}
			#{c(chat chatEdited)} {
				display: none;
			}
		}
	}
}
#{c(chat spoiler content)}#{c(chat spoiler hidden)} {
	--__current--spoiler-text-color: inherit;
}
#{c(chat spoiler content)}#{c(chat spoiler hidden)}:hover {
	opacity: 0.7;
	#{c(chat spoiler obscuredTextContentInner)} :is(span, code) {
		transition: opacity .5s .5s ease-in-out;
		opacity: 1;
	}
}

// who the hell uses those wave stickers?
#{c(chat compactContainer)},
#{c(chat compactButton)},
#{c(chat containerExpanded)} {
	display: none;
}

#{c(chat botTag)} {
	background-color: $primary;
	&#{c(chat botTagOp)} {
		background-color: $card;
		color: $primary;
		font-weight: 600;
	}
}

#{c(chat gifFavoriteButton)} {
	#{c(chat gifFavoriteSelected)}#{c(chat gifFavoriteShowPulse)} #{c(chat gifFavoriteIcon)} {
		animation: gifBounce .4s linear;
	}
	#{c(chat gifFavoriteSelected)}#{c(chat gifFavoriteShowPulse)}:after {
		animation: gifRipple .45s ease;
	}
	&::after {
		border-color: $primary;
	}
	&:hover,
	&#{c(chat gifFavoriteSelected)} {
		color: $primary;
	}
}


#{c(chat zalgoBlocker)} #{c(chat messageContent)},
#{c(chat chatUsername)} {
	overflow: visible;
}

#{c(chat blockquoteContainer)} blockquote {
	background-color: $card;
	padding: 2px 8px 2px 12px;
}
#{c(chat blockquoteDivider)} {
	background-color: $primary;
}

#{c(reaction reaction)} {
	&,&#{c(reaction me)},&:hover,&:active {
		background: $card;
	}
	&:hover {
		border-color: $hover;
	}
	&:active {
		border-color: $primary;
	}
	&#{c(reaction me)} {
		border-color: $secondary;
		#{c(reaction count)} {
			color: $primary;
			text-shadow: .125rem .125rem .1875rem;
		}
	}
	#{c(reaction count)} {
		color: var(--text-muted);
	}
}

#{c(chat welcomeCTA)} {
	display: none;
}

#{c(chat chatUsernameTimedOut)} path {
	fill: $red;
}

#{c(chat messageAttachment)} {
	width: unset;
}

:is(#{c(main dark)},#{c(main light)}) {
	#{c(chat channelLinkUserMentionWrapper)} {
		display: inline-block;
		transform: rotate(0deg);
		background-color: transparent;
		color: var(--interactive-hover);
		transition: color 50ms ease-out;
		@include bg($tr:opacity 50ms ease-out,$br:3px,$bg:$primary,$o:.25);
		&:hover {
			color: var(--interactive-active);
			&::before {
				opacity: .75;
			}
		}
	}
}
#{c(chat mentioned)} {
		#{c(chat channelLinkUserMentionWrapper)} {
		color: var(--interactive-active);
		&::before {
			opacity: .75;
		}
	}
}

// vc chat
#{c(call wrapper)}#{c(chat chatSidebarOpen)} #{c(call container)} {
	border-radius: 0;
}