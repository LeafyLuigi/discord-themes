@use "backend" as *;
// Threads
#{c(threads jump)} {
	background-color: $card;
}
#{c(chat)}#{c(chat threadSidebarOpen)} {
	border-radius: 0;
	#{c(header toolbar)} {
		right: 0;
	}
	// &~div[style*=min-width]:has(+#{c(chat layerWrapper)}>#{c(threads notFloating)}) {
	// 	display: none;
	// }
}
#{c(threads resizeHandle)} {
	background: transparent;
	transition: background-color 0.25s ease-in-out 0.25s; 
	&:hover,
	&:active {
		background: $primary;
	}
}
#{c(threads container)} {
	border-radius: 0;
	background-color: transparent;
}
#{c(threads newThreadContainer)} {
	background: none;
}
#{c(threads chat)},
#{c(threads newChat)} {
	&::before {
		content: none;
	}
}
#{c(threads header)},
#{c(threads newChat)} {
	background-color: $middle;
}
#{c(threads iconWrapper)} {
	background-color: $card;
}
// #{c(threads newTextAreaFocused)} {
// 	border-color: transparent;
// }
#{c(threads newTextAreaError)} {
	border-color: $red;
}
#{c(chat cozy)}#{c(threads msgHasThread)}::after,
#{c(threads msgSpine)} {
	border-color: $primary;
	filter: drop-shadow(2px 2px 2px $secondary);
}

// Floating Chat
#{c(chat threadSidebarFloating)} {
	#{c(forums headerRow)},
	:is(#{c(forums grid)},#{c(forums list)})>div:first-child {
		min-width: 0;
	}
}
// #{c(chat layerWrapper)} {
// 	position: unset;
// }
#{c(threads floating)} {
	position: unset;
	border-left: 4px solid transparent;
	filter: none;
}
#{c(threads chatTarget)} {
	display: none;
}