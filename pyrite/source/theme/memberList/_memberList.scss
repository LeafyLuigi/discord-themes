@use "sass:color";
@use "sass:list";
@use "sass:meta";
@use "sass:string";
@use "sass:map";
@use "sass:math";
@use "backend" as *;
/* Start Member List */
// both have to be listed for both servers and group dms
#{c(memberList container)}, #{c(memberList wrap)} {
	--width: 240px;
	// --background: var(--hsl-side-shading);
	--hide-var: var(--hide-member-list);
}
#{c(memberList wrap)} {
	background: transparent;
	min-width: auto;
	// flex-basis: 0px;
}
#{c(memberList members)} {
	background: transparent;
}

@if $lite != 1 {
	#{c(memberList group)} {
		color: var(--category-color);
		display: flex;
		justify-content: center;
		align-items: center;
		&:after {
			content: "";
			height: 2px;
			flex-grow: 1;
			background: linear-gradient(to right, currentColor -50%, transparent 50%);
			margin-left: 5px;
		}
	}
	#{c(memberList placeholderMemberGroups)},
	#{c(memberList placeholderAvatar)},
	#{c(memberList placeholderUsername)},
	#{c(memberList placeholderUsernameMultiple)} {
		background-color: $card;
	}
	#{c(memberList offline)} {
		opacity: 0.7;
		transition: 0.25s all ease-in-out;
		#{c(memberList avatar)} {
			filter: grayscale(100%);
		}
		&:hover {
			opacity: 1;
			#{c(memberList avatar)} {
				filter: none;
			}
		}
	}
}
#{c(memberList memberBackground)} {
	background: transparent;
}


@if $lite != 1 {
//////////////////////////////////////
/// BELOW WILL BE SKIPPED IN LITE. ///
//////////////////////////////////////
// For each of the colors, the variable used (excluding `var(--...)`) should be the first value then the colors for each saturation value.
// 
// attempting to find what colour is what via the js files (2025-07-28)
// online uses GREEN_NEW_38, idle is YELLOW_NEW_30, dnd is RED_NEW_46, streaming uses twitch's default colour and invis+offline+"unknown" uses NEUTRAL_34
// these default values are:
// GREEN_NEW_38: hsl(134.526 41.485% 44.902%) => #43a25a
// YELLOW_NEW_30: hsl(33.559 52.679% 56.078%) => #ca9654
// RED_NEW_46: hsl(356.962 66.949% 53.725%) => #d83a42
// TWITCH: hsl(264.13 100% 63.922%) => #9147ff
// NEUTRAL_34: hsl(233.333 3.734% 52.745%) => #82838b
// 
// (below uses old values for green)
// with saturation-factor involved, the middle value is multiplied by 1,.95,.9,.85,...,.1,.05,0.
// this then obviously changes the hex value. using #40a258 and .95 as an example, the hsl becomes hsl(134.694 41.19485% 44.314%) => #42a059
// this is *exactly* what we see for that example.
// #40a258 and .9 becomes hsl(134.694 39.026700000000003% 44.314%) or #459d5b.
// this seems to match.

$allColors: (
	"hsl-green-color": #43a25a,
	"hsl-yellow-color": #ca9654,
	"hsl-red-color": #d83a42,
	"hsl-live-color": #9147ff,
	"hsl-offline-color": #82838b,
);

@each $var,$val in $allColors {
	$listDone: (); // temp list for completed colors to avoid repeating
	$listFill: ":is("; // for member list, top of dms etc
	$listBackground: ":is("; // for status changer
	$i: 1;
	@while $i >= 0 {
		// @debug $i;
		$altered: color.change($val,$saturation: $i * color.channel($val,"saturation",$space:hsl),$space:hsl);
		$newVal: string.to-lower-case("#"+string.slice(color.ie-hex-str($altered),4,-1));
		$split: (
			"r": math.round(color.channel($altered,"red",$space:rgb)),
			"g": math.round(color.channel($altered,"green",$space:rgb)),
			"b": math.round(color.channel($altered,"blue",$space:rgb)),
		); // these need to be rounded.
		// @debug $val, $i, $newVal;
		@if not list.index($listDone, $newVal) {
			$listFill: $listFill+"[fill=\""+#{$newVal}+"\"],";
			$listBackground: $listBackground+"[style=\"background-color: rgb("+map.get($split,"r")+", "+map.get($split,"g")+", "+map.get($split,"b")+");\"],";
			$listDone: list.append($listDone,$newVal);
		}
		$i: $i - 0.05;
	}
	$listFill: string.slice($listFill,1,-2)+")"; // remove last comma and close list
	$listBackground: string.slice($listBackground,1,-2)+")"; // remove last comma and close list
	:is(
		#{c(avatar pointerEvents)},
		#{c(avatar mask)}>svg>rect,
		#{c(avatar cursorDefault)}>rect
	) {
		&#{$listFill} {
			fill: var(--#{$var});
		}
	}
	// since no live in status picker
	@if $var != "hsl-live-color" {
		// it's probably better to do this as nth-child but eh fuck it
		#{c(modals menus status)} {
			&#{$listBackground} {
				background-color: var(--#{$var}) !important; // !important reason: override inline style
			}
		}
	}
}

}