@use "start" as *;
@use "backend" as *;

@use "sass:list";
@use "sass:meta";
@use "sass:string";
/* Begin I18N */
/* If you wish to translate strings from this file into another language, copy below as a base and send a message in the support server. */
/* In doing so you'll be given a translator tag and a role on said support server. */
html {
	// By default this is entirely used for the en-GB and en-US langs. fallback below for en-US
	--theme-name: "Pyrite";
	--theme-name-beta: "Pyrite Beta Branch";

	// Tags are used for contributors who have assisted one way or another with the theme.
	--tag-dev: "Theme Dev";
	--tag-translator: "Theme Translator";
	--tag-helper: "Theme Helper";
	
	--settings-lang-translate: "If you want to add (or fix) translations, feel free to join the support server.";
	--theme-update-warning: "Your version of Pyrite is outdated. Please backup your theme and redownload.";

	// Used within codelangs file for Codeblocks sans formatting or language
	--code-plain-text: "Plain Text";

	// Within error file
	// Error page partial jokes - Not every joke will be listed and instead this is only the button for the time being.
	--error-reload: "please click this";
	--error-mac-do-not-restart: "DO NOT RESTART YOUR COMPUTER.";

	// Within Modals/Activities file
	--modal-activities-non-nitro: "Below will not work without Nitro.";

	// Currently within Experiments file
	// Client themes are intentionally broken by the theme.
	--client-preset-disabled: var(--theme-name) " intentionally breaks these presets.";
	--client-preset-disabled2: "If you wish to edit the way your theme looks, you can edit your theme file. If you need help in doing so, please join the support server.";

	// Below within this rule aren't to be copied but are always applied globally. Both British English and French are used as beta branches.
	--beta-en-GB: "Pyrite Beta Branch";
	--beta-fr: "Branche Bêta de Pyrite";
}
// Just in case of stupid American spellings
// [lang="en-US"] {
// 
// }
// Partially translated by Leafy
[lang="fr"] {
	--theme-name: "Pyrite";
	--theme-name-beta: "Branche Bêta de Pyrite";
}

// Current Untranslated Discord Languages (2022-09-02) - Uncomment whatever one you'd like to edit and go for it.
// [lang="da"] {}
// [lang="de"] {}
// [lang="es-ES"] {}
// [lang="es-419"] {}
// [lang="hr"] {}
// [lang="it"] {}
// [lang="lt"] {}
// [lang="hu"] {}
// [lang="nl"] {}
// [lang="no"] {}
// [lang="pl"] {}
// [lang="pt-BR"] {}
// [lang="ro"] {}
// [lang="fi"] {}
// [lang="sv-SE"] {}
// [lang="vi"] {}
// [lang="tr"] {}
// [lang="cs"] {}
// [lang="el"] {}
// [lang="bg"] {}
// [lang="ru"] {}
// [lang="uk"] {}
// [lang="hi"] {}
// [lang="th"] {}
// [lang="zh-CN"] {}
// [lang="ja"] {}
// [lang="zh-TW"] {}
// [lang="ko"] {}

// Below are things that use the translations above.
/* User Tags */
$tags: (
	"dev": ( // Main developer of the theme.
		"309976820109803520", // Leafy
	),
	"helper": ( // People who have contributed to the theme one way or another, be it support or CSS.
		"126652966265421824", // Scars
		"393900343135830016", // Nyx
	),
	// "translator": ( // People who have translated the theme, even partially.

	// ),
);

// group = what tag will be used, will be inserted as `var(--tag-#{$group})`
// user = string list for what user(s) will have that tag
// itm = an item in alias when it's a list
// output --lang is the name, as above
@each $group, $user in $tags {
	// for lists
	$k: "";
	@if meta.type-of($user) == list {
		@if list.length($user) > 1 {
			$k: ":is("; // start :is(
			@for $i from 1 through list.length($user) {
				$k: string.insert($k,"[src*=\"" + list.nth($user,$i) + "\"],",-1);
			}
			// remove extra comma, add closing )
			$k: string.slice($k,0,-2) + ")";
		} @else {
			$k: "[src*=\"" + list.nth($user,1) + "\"]";
		}
	} @else {
	// and for single strings
		$k: "[src*=\"#{$user}\"]";
	}
	#{c(chat chatAvatar)}#{$k} ~ #{c(chat chatHeaderUsername)} {
		--local-tag: var(--tag-#{$group});
	}
}

/* Tags */
#{c(chat messageContents)} > #{c(chat chatAvatar)} ~ #{c(chat chatHeaderUsername)} #{c(chat chatUsername)}:after {
  content: var(--local-tag, none);
  color: currentcolor;
  font-size: 11px;
  display: inline-block;
  margin-left: 4px;
  transform: skewX(-15deg);
}

/* Version */
#{c(userSettings sidebarInfo)} {
	&::after {
		content: $theme-name string.insert($version, " - ", 0);
		font-style: italic;
		color: var(--text-muted);
		font-size: 12px;
		line-height: 16px;
	}
}

/* Beta Version (only for French and British English) */
html:is([lang="en-GB"],[lang="fr"]) #{c(userSettings sidebarInfo)} {
	&::after {
		content: var(--theme-name-beta) string.insert($version, " - ", 0);
	}
}

/* Language Tab Beta Labels (only for French and British English) */
#language-tab #{c(userSettings radioBarInfo)} > div:after {
	font-size: 14px;
	color: $primary;
	font-style: italic;
}
#language-tab div[role="radiogroup"] #{c(userSettings radioGroupItem)} {
	&:nth-child(3) #{c(userSettings radioBarInfo)} > div:after {
		content: var(--beta-en-GB);
	}
	&:nth-child(7) #{c(userSettings radioBarInfo)} > div:after {
		content: var(--beta-fr);
	}
}

/* Redownload pls bar */
// #{c(main appContainer)}::before {
//   content: var(--theme-update-warning);
//   text-align: center;
//   position: absolute;
//   color: #fff;
//   white-space: pre-wrap;
//   box-sizing: border-box;
//   padding: 10px 0;
//   background-color: $header;
//   display: var(--update-notice-NY-2023, block);
//   z-index: 2500;
// }