@use "backend" as *;

/* Start Header */
// file also includes top bar that gets removed by the theme
#{c(header)} {
	border: none;
	&#{c(header themed)} {
		z-index: 1010;
		background: $header;
	}
}
#{c(header input)} {
	@include header;
	&:focus {
		background: transparent;
		text-shadow: none;
	}
}
#{c(header children)} {
	&:after {
		content: none;
	}
	// > #{c(header iconWrapper)} {
	// 	> #{c(header icon)} {
	// 		filter: drop-shadow(2px 2px 2px var(--header-secondary));
	// 	}
	// }
}
#{c(header divider)} {
	margin: 0;
	width: 8px;
	background: linear-gradient(to right, transparent 0%, $primary 50%, transparent 100%);
}
#{c(header title)} {
	@include header;
	overflow: visible;
}

@if $lite != 1 {
	#{c(header akaBadge)} {
		background-color: $secondary;
		color: var(--header-primary);
	}
	#{c(header updateDownloadingCloud)} {
		color: $red;
	}
}
#{c(os mac)} {
	:is(#{c(header title)},#{c(header children)},#{c(header topic)}) {
		-webkit-app-region: no-drag;
	}
}
// #{c(avatar pointerEvents)} > svg > rect {
// 	// &[fill*="hsl(139, calc(var(--saturation-factor, 1) * 47.3%), 43.9%)"],
// 	&[fill*="rgba(59, 165, 92, 1)"] {
// 		fill: $green;
// 	}
// 	// &[fill*="hsl(38, calc(var(--saturation-factor, 1) * 95.7%), 54.1%)"],
// 	&[fill*="rgba(250, 166, 26, 1)"] {
// 		fill: $yellow;
// 	}
// 	// &[fill*="hsl(359, calc(var(--saturation-factor, 1) * 82.6%), 59.4%)"],
// 	&[fill*="rgba(237, 66, 69, 1)"] {
// 		fill: $red;
// 	}
// 	// &[fill*="hsl(262, calc(var(--saturation-factor, 1) * 46.8%), 39.8%)"],
// 	&[fill*="rgba(89, 54, 149, 1)"] {
// 		fill: $live;
// 	}
// 	// &[fill*="hsl(214, calc(var(--saturation-factor, 1) * 9.9%), 50.4%)"],
// 	&[fill*="rgba(116, 127, 141, 1)"] {
// 		fill: $offline;
// 	}
// }

@if $lite != 1 {
	#{c(header icon)} {
		color: var(--header-primary);
	}
	#{c(header iconBadge)} {
		background-color: $secondary;
	}
	#{c(header iconClickable)} {
		#{c(header icon)} {
			color: $primary;
			path {
				fill: currentColor;
			}
		}
		&:hover {
			#{c(header icon)} {
				color: $hover;
				// filter: drop-shadow(0 0 2px currentColor);
			}
			// #{c(header iconBadge)} {
			// 	// filter: drop-shadow(0 0 2px currentColor);
			// }
		}
	}
	#{c(header updateDownloadingIcon)} {
		color: $red;
	}
	#{c(header updateIconForeground)} {
		fill: $red;
	}
}
#{c(header search)} {
	order: 1;
}
#{c(header searchBar)} {
	background: $card;
}

// i got no idea how to get this
// #{c(header warningIcon)} {
//   color: $yellow;
// }


@if $lite != 1 {
	#{c(header toolbar)} {
		#{c(header iconWrapper)}:not(#{c(header iconClickable)}) #{c(header icon)} {
			cursor: not-allowed;
			color: $red;
		} 
	}

	// add friend header bar button
	#{c(header tabBar)} #{c(header tabBarItem)}#{c(header addFriend)}#{c(header addFriend)}#{c(header addFriend)} {
		&:hover {
			background: $hover;
		}
		&[aria-selected=true] {
			background: rgb(from $primary r g b / 0.2);
			color: $primary;
		}
	}
	
	#{c(topBar trailing recentsIcon)} {
		color: $primary;
		&:is(
			:hover,
			[aria-expanded=true]
		) {
			color: $secondary;
		}
	}
}

// Hide Help icon. Can be accessed by pressing F1.
#{c(topBar bar)} {
	background: $header;
}
#{c(topBar trailing container)} #{c(main anchorLink)}[href="https://support.discord.com"] {
	display: none;
}

// check for download icon using :has because fuck me.
#{c(main base)}:has(>#{c(topBar bar)}>#{c(topBar trailing container)}>#{c(topBar trailing button)}) {
	--extra-icons: 1;
}
// z-index so it matches the header bar
#{c(topBar bar)} {
	z-index: 1011;
}
// remove the centre part with the name and icon
#{c(topBar title container)} {
	display: none;
}
:root {
	--custom-app-top-bar-height: 0px; // for removing top bar
}
// icon for margin-right; this must be done differently for windows
#{c(chat layerWrapper)},
#{c(chat)}:not(#{c(chat threadSidebarOpen)}) {
	#{c(header toolbar)} {
		margin-right: calc(32px + var(--space-xs) + (var(--extra-icons,0) * 32px));
	}
}
#{c(os win)} {
	#{c(chat layerWrapper)},
	#{c(chat)}:not(#{c(chat threadSidebarOpen)}) {
		#{c(header toolbar)} {
			// 32px for inbox icon, space-xs for gap, check if old windows titlebar is enabled and if not mult 3 for button width
			margin-right: calc(32px + var(--space-xs) + (var(--extra-icons,0) * 32px) + 3 * (1 - var(--windows-titlebar-enabled,0)) * var(--win-min-max-close-button-width));
		}
		// #{c(header headerTitle)} {
		// 	// -webkit-app-region: drag;
		// 	// padding-right: calc(var(--space-xs) + 32px + var(--space-xs) + 3 * (1 - var(--windows-titlebar-enabled,0)) * var(--win-min-max-close-button-width));
		// }
	}
}
// windows only stuff
#{c(os win)} {
	#{c(topBar trailing winButtons)} {
		gap: 0;
		&::before {
			content: none;
		}
	}
	#{c(topBar trailing winButton)} {
		width: var(--win-min-max-close-button-width);
		height: 48px;
	}
	#{c(topBar trailing recentsIcon)} {
		right: var(--space-xs);
	}
}
// windows and mac
:is(#{c(os win)}, #{c(os mac)}) {
	#{c(topBar trailing container)} {
		gap: 0;
	}
	:not(#{c(topBar systemBar)})>#{c(topBar trailing container)} {
		top: 24px;
	}
	#{c(topBar bar)} {
		@include bg($top:0,$bottom:null,$right:0,$left:0,$h:28px,$war:drag,$z:2);
	}
	// make sure shit is still clickable
	:is(
		#{c(header title)},
		#{c(sidebar server header clickable)}
	) {
		-webkit-app-region: no-drag;
	}
}
// linux and web
:is(#{c(os linux)}, #{c(os web)}) {
	#{c(topBar trailing recentsIcon)} {
		position: absolute;
		top: 12px;
	}
}