@use "start" as *;
/*! #{$theme-name} v#{$version} by LeafyLuigi */

// Import Functions, Variables, Mixins and Class list functionality.
@use "backend" as *;

// Contains the theme proper.
@use "theme";

/* Default Variables */
// Default variables are stored in `start/_index.scss`.
// Vars labeled with a dagger (†) have a HSL variable available and should be used instead of the raw value. Example: --primary-color => --hsl-primary-color.
// Vars labeled with a double dagger (‡) get overridden by .visual-refresh.theme :(
:root {
	/* forced by theme */
	--font-headline: #{v(font-headline)}; // removes the ABC Ginto Nord font
	--font-display: #{v(font-display)}; // display is used for headers
	--font-code: #{v(font-code)};
	--font-primary: #{v(font-primary)};
	--secret-orange: #{v(secret-orange)}; // used in only one place - radio bar. converted from hsl.
	--brand-experiment: #{v(brand-experiment)}; // fallback for dumb discord stuff
	--focus-primary: #{v(focus-primary)}; // tab around wheeee
	--hide-fallback-enabled: #{v(hide-fallback-enabled)}; // used for hidable elements, default "hidden"
	--hide-fallback-disabled: #{v(hide-fallback-disabled)}; // used for hidable elements, default visible

	--background-image: #{v(background-image)};
	--user-modal-image: #{v(user-modal-image)};
	--user-popout-image: #{v(user-popout-image)};
	--background-attachment: #{v(background-attachment)};
	--user-modal-attachment: #{v(user-modal-attachment)};
	--user-popout-attachment: #{v(user-popout-attachment)};
	--primary-color: #{v(primary-color)}; // †
	--secondary-color: #{v(secondary-color)}; // †
	--hover-color: #{v(hover-color)}; // †
	--tooltip-color: #{v(tooltip-color)}; // †
	// --mention-background: #{v(mention-background)};
	--mention-opacity: #{v(mention-opacity)};
	--home-icon: #{v(home-icon)};

	--green-color: #{v(green-color)}; // †
	--yellow-color: #{v(yellow-color)}; // †
	--red-color: #{v(red-color)}; // †
	--link-color: #{v(link-color)}; // †
	--live-color: #{v(live-color)}; // †
	--offline-color: #{v(offline-color)}; // †

	/* Channels */
	--category-color: #{v(category-color)};
	--selected-channel-color: #{v(selected-channel-color)};
	--unread-channel-color: #{v(unread-channel-color)};
	--unread-channel-glow: #{v(unread-channel-glow)};
	--show-channel-unread-dot: #{v(show-channel-unread-dot)};
	--read-channel-color: #{v(read-channel-color)};
	--muted-channel-color: #{v(muted-channel-color)};
	--locked-voice-channel-color: #{v(locked-voice-channel-color)};

	/* Advanced Users */
	--code-font: #{v(code-font)};
	--body-font: #{v(body-font)};
	--expression-picker-height: #{v(expression-picker-height)}; // Height of the combined Gif/Sticker/Emoji picker. Does not effect adding reactions. Default and minimum height 500px (498px for Discord's base) and a maximum of 70vh. If Discord is smaller than 720px vertically, this won't apply.
	--background-filter: #{v(background-filter)};
	--user-modal-filter: #{v(user-modal-filter)};
	--user-popout-filter: #{v(user-popout-filter)};
	--home-icon-filter: #{v(home-icon-filter)};

	/* Toggles. From 0 (disable) to 1 (enable). Anything outside of those values have NOT been tested and likely aren't supported. */
	--hide-speed: #{v(hide-speed)}; // speed for animations for the below. must be a time value. you can add a second value for delay
	--hide-member-list: #{v(hide-member-list)};
	--hide-active-now: #{v(hide-active-now)};
	--hide-profile-panel: #{v(hide-profile-panel)};
	--hide-channel-list: #{v(hide-channel-list)};
	--blur-intensity: #{v(blur-intensity)};

	/* Windows Only - How many *pixels* wide the min/max/close buttons should be. */
	--win-min-max-close-button-width: #{v(win-min-max-close-button-width)}; /* default: 28px, square: 48px */

	/* Internal please ignore */
	// --update-notice-may25: none;
}
:root:root:root {
	--mention-background: #{v(mention-background)};
}

.theme-dark,
.theme-dark :not(div[class*=previewContainer_]) .theme-light:not(div[class*=layer_],div[class*=outer_]:is([class*=user-profile-popout],[class*=user-profile-modal])) {
	--card-background: #{v(dark-card-background)}; // †
	--side-shading: #{v(dark-side-shading)}; // †
	--middle-shading: #{v(dark-middle-shading)}; // †
	--header-shading: #{v(dark-header-shading)}; // †

	--hover-filter: #{v(dark-hover-filter)};
	--active-filter: #{v(dark-active-filter)};

	// // below: defaults set by theme
	// --interactive-normal: #{v(dark-interactive-normal)}; // ‡
	// --interactive-hover: #{v(dark-interactive-hover)}; // ‡
	// --interactive-active: #{v(dark-interactive-active)}; // ‡
	// --interactive-muted: #{v(dark-interactive-muted)};
	// --background-modifier-hover: #{v(dark-background-modifier-hover)}; // ‡
	// --background-modifier-active: #{v(dark-background-modifier-active)}; // ‡
	// --background-modifier-selected: #{v(dark-background-modifier-selected)}; // ‡
	// --background-modifier-accent: #{v(dark-background-modifier-accent)}; // ‡
}
// ...(cont from dark's comment)
// sidebar, guilds and sidebarregion all have a toggle-dark-sidebar option in discord's settings
.theme-light,
.theme-light :not(div[class*=previewContainer_]) .theme-dark:not(div[class*=layer_],div[class*=outer_]:is([class*=user-profile-popout],[class*=user-profile-modal]),div[class*=sidebar_],nav[class*=guilds_],div[class*=sidebarRegion_]) {
	--card-background: #{v(light-card-background)}; // †
	--side-shading: #{v(light-side-shading)}; // †
	--middle-shading: #{v(light-middle-shading)}; // †
	--header-shading: #{v(light-header-shading)}; // †

	--hover-filter: #{v(light-hover-filter)};
	--active-filter: #{v(light-active-filter)};

	// // below: defaults set by theme
	// --interactive-normal: #{v(light-interactive-normal)}; // ‡
	// --interactive-hover: #{v(light-interactive-hover)}; // ‡
	// --interactive-active: #{v(light-interactive-active)}; // ‡
	// --interactive-muted: #{v(light-interactive-muted)};
	// --background-modifier-hover: #{v(light-background-modifier-hover)}; // ‡
	// --background-modifier-active: #{v(light-background-modifier-active)}; // ‡
	// --background-modifier-selected: #{v(light-background-modifier-selected)}; // ‡
	// --background-modifier-accent: #{v(light-background-modifier-accent)}; // ‡
}

.theme-dark,
.theme-light {
	// below: defaults set by theme
	// those labeled with double dagger (‡) get overridden by .visual-refresh.theme
	// --input-background: #{v(dl-input-background)}; // ‡
	--control-brand-foreground: #{v(dl-control-brand-foreground)};
	--control-brand-foreground-new: #{v(dl-control-brand-foreground-new)};
	--deprecated-text-input-bg: #{v(dl-deprecated-text-input-bg)};
	--deprecated-text-input-border: #{v(dl-deprecated-text-input-border)};
	// --modal-background: #{v(dl-modal-background)}; // ‡
	// --modal-footer-background: #{v(dl-modal-footer-background)}; // ‡
	--__spoiler-background-color--hidden: #{v(dl-__spoiler-background-color--hidden)};
	--__spoiler-background-color--hidden--hover: #{v(dl-__spoiler-background-color--hidden--hover)};
	--__spoiler-background-color--revealed: #{v(dl-__spoiler-background-color--revealed)};
	--brand-500: #{v(dl-brand-500)};
	
	// below: remove elevation box shadows
	--dark-elevation-low: #{v(dl-dark-elevation-low)};
	--dark-elevation-high: #{v(dl-dark-elevation-high)};
	--dark-elevation-border: #{v(dl-dark-elevation-border)};
	--light-elevation-low: #{v(dl-light-elevation-low)};
	--light-elevation-high: #{v(dl-light-elevation-high)};
	--light-elevation-border: #{v(dl-light-elevation-border)};
	--elevation-stroke: #{v(dl-elevation-stroke)};
	--elevation-low: #{v(dl-elevation-low)};
	--elevation-medium: #{v(dl-elevation-medium)};
	--elevation-high: #{v(dl-elevation-high)};

	// below: colors set to same as variables above
	--info-positive-foreground: #{v(dl-info-positive-foreground)};
	--info-warning-foreground: #{v(dl-info-warning-foreground)};
	--info-danger-foreground: #{v(dl-info-danger-foreground)};
	--info-help-foreground: #{v(dl-info-help-foreground)};
	--status-positive-background: #{v(dl-status-positive-background)};
	--status-warning-background: #{v(dl-status-warning-background)};
	--status-danger-background: #{v(dl-status-danger-background)};
	--status-positive: #{v(dl-status-positive)};
	--status-warning: #{v(dl-status-warning)};
	--status-danger: #{v(dl-status-danger)};
	// --text-positive: #{v(dl-text-positive)}; // ‡
	// --text-warning: #{v(dl-text-warning)}; // ‡
	--text-danger: #{v(dl-text-danger)};
}

#{c(main visualRefresh)} {
	&#{c(main light)},
	&#{c(main dark)},
	&#{c(main darker)},
	&#{c(main midnight)},
	#{c(main light)},
	#{c(main dark)},
	#{c(main darker)},
	#{c(main midnight)} {
		// force set by theme
		--text-positive: #{v(text-positive)};
		--text-warning: #{v(text-warning)};
		--text-link: #{v(text-link)};
		--text-brand: #{v(text-brand)};
		--background-message-hover: #{v(background-message-hover)};
		--background-mentioned: #{v(background-mentioned)};
		--background-mentioned-hover: #{v(background-mentioned-hover)};
		--channel-icon: #{v(channel-icon)};

		--input-background: var(--hsl-card-background);
		--modal-background: var(--hsl-card-background);
		--modal-footer-background: transparent;
		--scrollbar-auto-scrollbar-color-thumb: var(--hsl-primary-color);
		--scrollbar-auto-scrollbar-color-track: transparent;
		--scrollbar-auto-thumb: var(--hsl-primary-color);
		--scrollbar-auto-track: transparent;
		--scrollbar-thin-thumb: var(--hsl-primary-color);
		--background-code: var(--hsl-card-background);
	}
}
// REMOVE SHADOWS
#{c(main light)},
#{c(main dark)},
#{c(main darker)},
#{c(main midnight)} {
	// takes initial string `--shadow` then appends each key/value going down the list, ie `--shadow-low`
	// sets the value to predetermined `unset` (tho changeable for testing)
	// each key also has an associated `-filter` variable. ie `--shadow-border-filter`
	$value: unset;
	$filterValue: unset; // use `drop-shadow()` for testing
	$list: (
		"-border",
		"-button-overlay",
		"-high",
		"-ledge",
		"-low",
		"-low-active",
		"-low-hover",
		"-medium",
		"-mobile-navigator-x",
		"-top-high",
		"-top-ledge",
		"-top-low",
	);
	@each $i in $list {
		--shadow#{$i}: #{$value};
		--shadow#{$i}-filter: #{$filterValue}; 
	}
}