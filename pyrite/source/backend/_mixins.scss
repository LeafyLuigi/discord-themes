// Mixins

/// Create background using a static, opaque color with the ability to change opacity
@mixin bg($o:null,$br:null,$bg:null,$h:null,$w:null,$tr:null,$z:-1,$bdf:null,$f:null,$bgf:null,$war:null,$wm:null,$top:0,$right:0,$bottom:0,$left:0,$pos:absolute) {
	&::before {
		content: "";
		@if $top {top: $top;} // default 0
		@if $right {right: $right;} // default 0
		@if $bottom {bottom: $bottom;} // default 0
		@if $left {left: $left;} // default 0
		@if $pos {position: $pos;} // default absolute
		@if $z {z-index: $z;} // default -1
		pointer-events: none;
		// What will need to be defined:
		@if $o {opacity: $o;}
		@if $br {border-radius: $br;}
		@if $bg {background-color: $bg;}
		@if $h {height: $h;}
		@if $w {width: $w;}
		@if $tr {transition: $tr;}
		@if $f {filter: $f;}
		@if $bdf {backdrop-filter: $bdf;}
		@if $bgf {background: $bgf;} // background full
		@if $war {-webkit-app-region: $war;}
		@if $wm {mask:$wm;}
	}
}

@mixin bg2($o:null,$br:null,$bg:null,$h:null,$w:null,$tr:null,$z:-1,$f:null,$bgf:null,$war:null,$wm:null,$top:0,$right:0,$bottom:0,$left:0,$pos:absolute) {
	&::after {
		content: "";
		@if $top {top: $top;} // default 0
		@if $right {right: $right;} // default 0
		@if $bottom {bottom: $bottom;} // default 0
		@if $left {left: $left;} // default 0
		@if $pos {position: $pos;} // default absolute
		@if $z {z-index: $z;} // default -1
		pointer-events: none;
		// What will need to be defined:
		@if $o {opacity: $o;}
		@if $br {border-radius: $br;}
		@if $bg {background-color: $bg;}
		@if $h {height: $h;}
		@if $w {width: $w;}
		@if $tr {transition: $tr;}
		@if $f {filter: $f;}
		@if $bgf {background: $bgf;} // background full
		@if $war {-webkit-app-region: $war;}
		@if $wm {mask:$wm;} // "mask" doesn't work unless it's on firefox.
	}
}

@mixin menu {
	@include bg($br:4px,$bdf:blur(calc(var(--blur-intensity,1) * 5px)),$bg:transparent);
	background-color: var(--modal-background);
}
@mixin menu-on-item {
	background-color: var(--modal-background);
	border-radius: 4px;
	backdrop-filter: blur(calc(var(--blur-intensity,1) * 5px));
}

@mixin card {
	border: 1px solid var(--hsl-secondary-color);
	background-color: var(--hsl-card-background);
}

@mixin card-light {
	border: 1px solid var(--hsl-secondary-color);
	background-color: rgba(255,255,255,0.05); // intentionally set colors
}
@mixin card-dark {
	border: 1px solid var(--hsl-secondary-color);
	background-color: rgba(0,0,0,0.5); // intentionally set colors
}

@mixin header {
	color: var(--header-primary);
	// text-shadow: 2px 2px calc(var(--blur-intensity,1) * 4px) var(--header-secondary);
}
@mixin header-line-before {
	@include header;
	display: flex;
	justify-content: center;
	align-items: center;
	&::before {
		content: "";
		height: 2px;
		flex-grow: 1;
		background: linear-gradient(to left, currentColor -50%, transparent 50%);
		margin-right: 5px;
	}
}
@mixin header-line-after {
	@include header;
	display: flex;
	justify-content: center;
	align-items: center;
	&::after {
		content: "";
		height: 2px;
		flex-grow: 1;
		background: linear-gradient(to right, currentColor -50%, transparent 50%);
		margin-left: 5px;
	}
}
@mixin header-line {
	@include header;
	display: flex;
	justify-content: center;
	align-items: center;
	&:is(::before,::after) {
		content: "";
		height: 2px;
		flex-grow: 1;
	}
	&::before {
		background: linear-gradient(to left, currentColor -50%, transparent 50%);
		margin-right: 5px;
	}
	&::after {
		background: linear-gradient(to right, currentColor -50%, transparent 50%);
		margin-left: 5px;
	}
}
